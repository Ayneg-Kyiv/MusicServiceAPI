@page "/logins"



@using MusicServiceMauiClient.DTOs.IdentityDTOs;
@using MusicServiceMauiClient.Services;

@inject IJSRuntime js
@inject ILogin loginService 
@inject NavigationManager Navigation

<div class="my-container">
    <EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        </div>

        <button type="submit" class="btn btn-primary">Login</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(LoginErrorMessage))
    {
        <div class="alert alert-danger">@LoginErrorMessage</div>
    }
</div>

<style>
    .my-container {
        width: 200%;
        display: flex;
        flex-direction: column;
        justify-content: center; 
        align-items: center; 
        padding-inline: 4%;
        padding-top: 4%;
        padding-bottom: 10%;
        background-image: linear-gradient( rgba(0, 0, 255, 0.5), rgba(255, 192, 203, 0.5));
        align-items: flex-start;
    }
    
    form{
        justify-content: center;
        align-items: center;
        margin: 50px;
    }

    .form-group {
        margin-bottom: 15px; 
    }

    .form-control {
        width: 100%; 
        padding: 10px;
        border: 1px solid #ddd; 
        border-radius: 4px; 
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); 
        }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff; 
        color: #fff; 
        padding: 10px 15px; 
        border-radius: 4px; 
    }

        .btn-primary:hover {
            background-color: #0056b3; 
            border-color: #0056b3; 
        }


</style>

@code {
    private string? LoginErrorMessage;
    public LoginDTO loginModel = new LoginDTO(); 

    private async Task HandleValidSubmit()
    {
        var token = await loginService.LoginAsync(loginModel); 

        if (!string.IsNullOrEmpty(token))
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            LoginErrorMessage = "Login failed. Please check your credentials.";
        }
    }
}
